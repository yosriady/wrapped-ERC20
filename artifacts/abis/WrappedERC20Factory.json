{
  "contractName": "WrappedERC20Factory",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "exchanges",
      "outputs": [
        {
          "internalType": "contract IExchange",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wrappedTokens",
      "outputs": [
        {
          "internalType": "contract IERC20MintableBurnable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "wrappedToken",
          "type": "address"
        }
      ],
      "name": "WrappedTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        }
      ],
      "name": "ExchangeCreated",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exchanges\",\"outputs\":[{\"internalType\":\"contract IExchange\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wrappedTokens\",\"outputs\":[{\"internalType\":\"contract IERC20MintableBurnable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"WrappedTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exchange\",\"type\":\"address\"}],\"name\":\"ExchangeCreated\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"create(address)\":{\"details\":\"Deploys a new WrappedERC20 token and automated Exchange contract for a given ERC20 token.\",\"params\":{\"_token\":\"ERC20 token address e.g. PAY token\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/yos/work/wrapped-ERC20/contracts/WrappedERC20Factory.sol\":\"WrappedERC20Factory\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/yos/work/wrapped-ERC20/contracts/WrappedERC20.sol\":{\"keccak256\":\"0x3a1d93456efbc2da39f9c102aeb3f273743e882242b3b5f37302cf2eccb8d706\",\"urls\":[\"bzz-raw://5d72abd9293d43b90f90b835e078536dcb605ad70ebd46df253e518af843da3a\",\"dweb:/ipfs/Qmf7GE2mjYzb5d8HgfhxLf8e7MsXi9xeKCi4We6o4TNYiR\"]},\"/Users/yos/work/wrapped-ERC20/contracts/WrappedERC20Exchange.sol\":{\"keccak256\":\"0x8057a1b17e6499221636387725aec8ea3f56e1cf85a4471d684e80340870c94b\",\"urls\":[\"bzz-raw://9576832fb6e2739041df71ef3d5a750a5306f1003eba4cf5d7f6b02f75199612\",\"dweb:/ipfs/QmecaVjvqeG5ZwcMDznQ31JKfEbMor9tQQ4KKeu9ekSovd\"]},\"/Users/yos/work/wrapped-ERC20/contracts/WrappedERC20Factory.sol\":{\"keccak256\":\"0x079bd3532dce0eaeed2a5aaa60eee2375f3c0452dfeaea8b97b48ff655a65461\",\"urls\":[\"bzz-raw://d2e027feb22e42da070b7a86b96c2dce72c079988364e0e061266bda463dd258\",\"dweb:/ipfs/QmS44FNVXnQJb3NvHGRNd879Xrgvdv4twXVFLUDjSqSL2U\"]},\"/Users/yos/work/wrapped-ERC20/contracts/interfaces/IERC20Detailed.sol\":{\"keccak256\":\"0xfb71a68a7d4164b518736399cd6d982bb5ab3fcdbfb441e77a448af86aa77626\",\"urls\":[\"bzz-raw://9506b97f373555a7e45d575025af06195d7bdc3af2901fea1e995ad23086b59a\",\"dweb:/ipfs/QmaWLArex7NQzj5swQ2BPAoMLC9jNL2efJ4aMx3u27ZqL5\"]},\"/Users/yos/work/wrapped-ERC20/contracts/interfaces/IERC20MintableBurnable.sol\":{\"keccak256\":\"0x9f49a0b1f18912e6fb1e65ae7a088ece85170984c736aaa602a95bfea003195c\",\"urls\":[\"bzz-raw://6ac02e94919ca263a2444a0b128e42b4b153b03d6caf52dc09a47a6b9347d8f8\",\"dweb:/ipfs/QmWtRTDZayGbNsLBM3iT8RTXFLsspnKfsBaospcFtck1CT\"]},\"/Users/yos/work/wrapped-ERC20/contracts/interfaces/IExchange.sol\":{\"keccak256\":\"0x302f390574885804087d0cd9543d54cfb236c56fcfdc628c68f3655fd5289378\",\"urls\":[\"bzz-raw://2cab55468e4f9c08b0eae4516862194cd9c9f275cdfd357b1fdf604cb2c06f75\",\"dweb:/ipfs/QmUGSRref5qmyr4mDiRudVMZ3F5NxLHQ8rBiYczezmJ9wc\"]},\"/Users/yos/work/wrapped-ERC20/contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0x29e87736fef261deb126db9359896a2567f8bf960efb66671e3044062e7e9139\",\"urls\":[\"bzz-raw://aed6b7028b081eb3907eb19aef7a961c34428e10b9bbb732499713515398d93e\",\"dweb:/ipfs/Qmaqaq9gNhQYYehsXSt1uzaa4uJsPw3zXPRNpFS3eHnXpy\"]},\"@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x63da54a7a5d4e4d82ac8d1f4f7f995fd8ef2b5fe1f2960b83e534fa37fb60910\",\"urls\":[\"bzz-raw://22e54aa25d633d51efaadb0c956ddd80616a79ee79a41bb8d958473712732612\",\"dweb:/ipfs/QmNbiwWkL4v1i6TgrppGahxHBUHJUrLJLVc8EDb7DFsVDq\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd1804d04fb39689453f673601429a99a0c68c422a981fc338773df9a59180fe9\",\"urls\":[\"bzz-raw://1b9307920e0378d58c6677f8952ad090a9ecb30e878835e301a0d18386a870c1\",\"dweb:/ipfs/QmYYixTDVF4FXqFpYzEcufAwEY9BFBJ33Ew9ncsGvD7btC\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa5ebf3344a36eb60e723e0764d85251c496e15e4b2d737b56415502b559a1765\",\"urls\":[\"bzz-raw://c543fd1fc299b7d32c658c86118ff2d0e7897a7c8b9d5f576fe6c0271c28961b\",\"dweb:/ipfs/QmNMrjLnsC4JP54aXLHhpra5NPTAs8rrd2bgXfYYYdJMhS\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x6df8d686813b2875e99928ecd07bf8ee6d7473bc6a95eb1190e8fdba86beda76\",\"urls\":[\"bzz-raw://ab0eb6779dbe75fcbae03ef6ec5d0345ff232750684c8341fc55f175bf43d13c\",\"dweb:/ipfs/QmcEyprFynsXawyHsgWMWGt7RoVV9tAt8Pac7QC1qEd7Bs\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzz-raw://005657a7ffbf6d12726ac0167b55be965dc473d43f061b605f883a54cc00ab4f\",\"dweb:/ipfs/QmaBzyvDQyNnn6DXQYewEtN9Go85orikSnW9PwNWqUGPEX\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x0441ff2b36d503f3a29d28d3754291f119064f4973d5c780698143d919037a78\",\"urls\":[\"bzz-raw://af27dd68d2371e68c8ed8cf297ec6d832bf906742d53367b70399ba918060cb7\",\"dweb:/ipfs/QmcMMjZceFepXgRrzSx577oWwt7SCSFzoqZiTF7tTxquF7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "436:2762:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;436:2762:3;;;;;;;",
  "deployedSourceMap": "436:2762:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;436:2762:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;777:46:3;-1:-1:-1;;;;;777:46:3;;:::i;:::-;;;;-1:-1:-1;;;;;777:46:3;;;;;;;;;;;;;;1049:457;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1049:457:3;-1:-1:-1;;;;;1049:457:3;;:::i;:::-;;;;;;;;;;;;;;;;;;655:63;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;655:63:3;-1:-1:-1;;;;;655:63:3;;:::i;777:46::-;;;;;;;;;;;;-1:-1:-1;;;;;777:46:3;;:::o;1049:457::-;1096:4;1112:35;1150:26;1169:6;1150:18;:26::i;:::-;1112:64;;1186:18;1207:36;1222:6;1230:12;1207:14;:36::i;:::-;1186:57;;1340:19;1381:12;1340:55;;1405:8;-1:-1:-1;;;;;1405:18:3;;1432:8;1405:37;;;;;;;;;;;;;-1:-1:-1;;;;;1405:37:3;-1:-1:-1;;;;;1405:37:3;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1405:37:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1405:37:3;;;;1452:8;-1:-1:-1;;;;;1452:23:3;;:25;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1452:25:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1495:4:3;;1049:457;-1:-1:-1;;;;;;;;1049:457:3:o;655:63::-;;;;;;;;;;;;;-1:-1:-1;;;;;655:63:3;;:::o;1710:837::-;1771:22;1887:16;1929:6;1887:50;;1947:25;2015:1;-1:-1:-1;;;;;2015:6:3;;:8;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2015:8:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2015:8:3;;;;;;39:16:-1;36:1;17:17;2:54;101:4;2015:8:3;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;2015:8:3;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;2015:8:3;;420:4:-1;411:14;;;;2015:8:3;;;;;411:14:-1;2015:8:3;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2015:8:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1982:42;;;;;;-1:-1:-1;;;1982:42:3;;;;;;-1:-1:-1;;;1982:42:3;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1982:42:3;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1982:42:3;;;1947:78;;2035:27;2094:1;-1:-1:-1;;;;;2094:8:3;;:10;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2094:10:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2094:10:3;;;;;;39:16:-1;36:1;17:17;2:54;101:4;2094:10:3;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;2094:10:3;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;2094:10:3;;420:4:-1;411:14;;;;2094:10:3;;;;;411:14:-1;2094:10:3;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2094:10:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:33;;;;;;-1:-1:-1;;;2072:33:3;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2072:33:3;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2072:33:3;;;2035:71;;2129:21;2159:1;-1:-1:-1;;;;;2159:10:3;;:12;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2159:12:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2159:12:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2159:12:3;2280:101;;2159:12;;-1:-1:-1;2242:35:3;;2308:11;;2331:13;;2159:12;;2280:101;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2280:101:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2280:101:3;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2280:101:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;;;;2391:30:3;;;:13;:30;;;;;;;;;;;;:45;;-1:-1:-1;;;;;;2391:45:3;;;;;;;;;2451:59;;;;;;;;;;;;;2391:45;;-1:-1:-1;2451:59:3;;;;;;;;;;;2528:12;1710:837;-1:-1:-1;;;;;;1710:837:3:o;2836:360::-;2931:9;2952:18;3009:6;3027:13;2973:77;;;;;:::i;:::-;-1:-1:-1;;;;;2973:77:3;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2973:77:3;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;;;;3060:26:3;;;;;;;:9;:26;;;;;;;;;:37;;-1:-1:-1;;;;;;3060:37:3;;;;;;;;;3112:51;;;;;;;;;;;;;3060:37;;-1:-1:-1;3112:51:3;;;;;;;;;;;3181:8;2836:360;-1:-1:-1;;;2836:360:3:o;436:2762::-;;;;;;;;:::o;:::-;;;;;;;;:::o",
  "source": "pragma solidity 0.5.11;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/roles/MinterRole.sol\";\nimport \"./interfaces/IERC20Detailed.sol\";\nimport \"./interfaces/IERC20MintableBurnable.sol\";\nimport \"./interfaces/IExchange.sol\";\nimport \"./interfaces/IFactory.sol\";\nimport \"./WrappedERC20Exchange.sol\";\nimport \"./WrappedERC20.sol\";\n\ncontract WrappedERC20Factory is IFactory {\n    using SafeERC20 for IERC20;\n\n    event WrappedTokenCreated(address collateral, address wrappedToken);\n    event ExchangeCreated(address collateral, address exchange);\n\n    mapping(address => IERC20MintableBurnable) public wrappedTokens; // Mapping of token address -> wrapped token address\n    mapping(address => IExchange) public exchanges; // Mapping of token address -> exchange address\n\n    /**\n    * @dev Deploys a new WrappedERC20 token and automated Exchange contract for a given ERC20 token.\n    * @param _token ERC20 token address e.g. PAY token\n    */\n    function create(IERC20 _token) public returns (bool) {\n        IERC20MintableBurnable wrappedToken = createWrappedToken(_token);\n        IExchange exchange = createExchange(_token, wrappedToken);\n\n        // Handover ERC20Mintable mint permissions from deployer to Exchange contract\n        MinterRole mintable = MinterRole(address(wrappedToken));\n        mintable.addMinter(address(exchange));\n        mintable.renounceMinter();\n\n        return true;\n    }\n\n    /**\n    * @dev Deploys a new WrappedERC20 token for a given ERC20 token.\n    * @param _token ERC20 token address e.g. PAY token\n    * @return IERC20MintableBurnable wrapped token address\n    */\n    function createWrappedToken(IERC20 _token) internal returns (IERC20MintableBurnable) {\n        // Get name, symbol, and decimals directly from _token, via ERC20Detailed\n        IERC20Detailed t = IERC20Detailed(address(_token));\n        string memory wrappedName = string(abi.encodePacked(\"Wrapped\", \" \", t.name()));\n        string memory wrappedSymbol = string(abi.encodePacked(\"W\", t.symbol())); // e.g. wPAY\n        uint8 wrappedDecimals = uint8(t.decimals()); // Conversion from old ERC20 uint256 decimals to new uint8\n\n        IERC20MintableBurnable wrappedToken = new WrappedERC20(\n          wrappedName,\n          wrappedSymbol,\n          wrappedDecimals\n        );\n        wrappedTokens[address(_token)] = wrappedToken;\n        emit WrappedTokenCreated(address(_token), address(wrappedToken));\n\n        return wrappedToken;\n    }\n\n    /**\n    * @dev Deploys an automated Exchange contract for a given pair of ERC20 and WrappedERC20 tokens.\n    * @param _token ERC20 token address e.g. PAY token\n    * @param _wrappedToken Wrapped ERC20 token address e.g. wPAY token\n    * @return IExchange exchange address\n    */\n    function createExchange(IERC20 _token, IERC20MintableBurnable _wrappedToken) internal returns (IExchange) {\n        IExchange exchange = new WrappedERC20Exchange(\n          _token,\n          _wrappedToken\n        );\n        exchanges[address(_token)] = exchange;\n        emit ExchangeCreated(address(_token), address(exchange));\n\n        return exchange;\n    }\n}",
  "sourcePath": "/Users/yos/work/wrapped-ERC20/contracts/WrappedERC20Factory.sol",
  "ast": {
    "absolutePath": "/Users/yos/work/wrapped-ERC20/contracts/WrappedERC20Factory.sol",
    "exportedSymbols": {
      "WrappedERC20Factory": [
        552
      ]
    },
    "id": 553,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 359,
        "literals": [
          "solidity",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 360,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 2143,
        "src": "25:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 361,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 2362,
        "src": "82:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/roles/MinterRole.sol",
        "file": "@openzeppelin/contracts/access/roles/MinterRole.sol",
        "id": 362,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 1316,
        "src": "142:61:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yos/work/wrapped-ERC20/contracts/interfaces/IERC20Detailed.sol",
        "file": "./interfaces/IERC20Detailed.sol",
        "id": 363,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 571,
        "src": "204:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yos/work/wrapped-ERC20/contracts/interfaces/IERC20MintableBurnable.sol",
        "file": "./interfaces/IERC20MintableBurnable.sol",
        "id": 364,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 595,
        "src": "246:49:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yos/work/wrapped-ERC20/contracts/interfaces/IExchange.sol",
        "file": "./interfaces/IExchange.sol",
        "id": 365,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 661,
        "src": "296:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yos/work/wrapped-ERC20/contracts/interfaces/IFactory.sol",
        "file": "./interfaces/IFactory.sol",
        "id": 366,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 698,
        "src": "333:35:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yos/work/wrapped-ERC20/contracts/WrappedERC20Exchange.sol",
        "file": "./WrappedERC20Exchange.sol",
        "id": 367,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 358,
        "src": "369:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yos/work/wrapped-ERC20/contracts/WrappedERC20.sol",
        "file": "./WrappedERC20.sol",
        "id": 368,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 90,
        "src": "406:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 369,
              "name": "IFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 697,
              "src": "468:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFactory_$697",
                "typeString": "contract IFactory"
              }
            },
            "id": 370,
            "nodeType": "InheritanceSpecifier",
            "src": "468:8:3"
          }
        ],
        "contractDependencies": [
          89,
          357,
          697
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 552,
        "linearizedBaseContracts": [
          552,
          697
        ],
        "name": "WrappedERC20Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 373,
            "libraryName": {
              "contractScope": null,
              "id": 371,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2361,
              "src": "489:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$2361",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "483:27:3",
            "typeName": {
              "contractScope": null,
              "id": 372,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2142,
              "src": "503:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2142",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 379,
            "name": "WrappedTokenCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "indexed": false,
                  "name": "collateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "542:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 377,
                  "indexed": false,
                  "name": "wrappedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "562:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "541:42:3"
            },
            "src": "516:68:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 385,
            "name": "ExchangeCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "indexed": false,
                  "name": "collateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "611:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 383,
                  "indexed": false,
                  "name": "exchange",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "631:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "610:38:3"
            },
            "src": "589:60:3"
          },
          {
            "constant": false,
            "id": 389,
            "name": "wrappedTokens",
            "nodeType": "VariableDeclaration",
            "scope": 552,
            "src": "655:63:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IERC20MintableBurnable_$594_$",
              "typeString": "mapping(address => contract IERC20MintableBurnable)"
            },
            "typeName": {
              "id": 388,
              "keyType": {
                "id": 386,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "663:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "655:42:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IERC20MintableBurnable_$594_$",
                "typeString": "mapping(address => contract IERC20MintableBurnable)"
              },
              "valueType": {
                "contractScope": null,
                "id": 387,
                "name": "IERC20MintableBurnable",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 594,
                "src": "674:22:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                  "typeString": "contract IERC20MintableBurnable"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 393,
            "name": "exchanges",
            "nodeType": "VariableDeclaration",
            "scope": 552,
            "src": "777:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IExchange_$660_$",
              "typeString": "mapping(address => contract IExchange)"
            },
            "typeName": {
              "id": 392,
              "keyType": {
                "id": 390,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "785:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "777:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IExchange_$660_$",
                "typeString": "mapping(address => contract IExchange)"
              },
              "valueType": {
                "contractScope": null,
                "id": 391,
                "name": "IExchange",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 660,
                "src": "796:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IExchange_$660",
                  "typeString": "contract IExchange"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 436,
              "nodeType": "Block",
              "src": "1102:404:3",
              "statements": [
                {
                  "assignments": [
                    401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 401,
                      "name": "wrappedToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 436,
                      "src": "1112:35:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                        "typeString": "contract IERC20MintableBurnable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 400,
                        "name": "IERC20MintableBurnable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 594,
                        "src": "1112:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                          "typeString": "contract IERC20MintableBurnable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 405,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 403,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "1169:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2142",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$2142",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 402,
                      "name": "createWrappedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "1150:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2142_$returns$_t_contract$_IERC20MintableBurnable_$594_$",
                        "typeString": "function (contract IERC20) returns (contract IERC20MintableBurnable)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1150:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                      "typeString": "contract IERC20MintableBurnable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1112:64:3"
                },
                {
                  "assignments": [
                    407
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 407,
                      "name": "exchange",
                      "nodeType": "VariableDeclaration",
                      "scope": 436,
                      "src": "1186:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$660",
                        "typeString": "contract IExchange"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 406,
                        "name": "IExchange",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 660,
                        "src": "1186:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchange_$660",
                          "typeString": "contract IExchange"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 412,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "1222:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2142",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 410,
                        "name": "wrappedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "1230:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                          "typeString": "contract IERC20MintableBurnable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$2142",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                          "typeString": "contract IERC20MintableBurnable"
                        }
                      ],
                      "id": 408,
                      "name": "createExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 551,
                      "src": "1207:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2142_$_t_contract$_IERC20MintableBurnable_$594_$returns$_t_contract$_IExchange_$660_$",
                        "typeString": "function (contract IERC20,contract IERC20MintableBurnable) returns (contract IExchange)"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1207:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchange_$660",
                      "typeString": "contract IExchange"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1186:57:3"
                },
                {
                  "assignments": [
                    414
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 414,
                      "name": "mintable",
                      "nodeType": "VariableDeclaration",
                      "scope": 436,
                      "src": "1340:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MinterRole_$1315",
                        "typeString": "contract MinterRole"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 413,
                        "name": "MinterRole",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1315,
                        "src": "1340:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MinterRole_$1315",
                          "typeString": "contract MinterRole"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 420,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 417,
                            "name": "wrappedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "1381:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                              "typeString": "contract IERC20MintableBurnable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                              "typeString": "contract IERC20MintableBurnable"
                            }
                          ],
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1373:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1373:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 415,
                      "name": "MinterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1315,
                      "src": "1362:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MinterRole_$1315_$",
                        "typeString": "type(contract MinterRole)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MinterRole_$1315",
                      "typeString": "contract MinterRole"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1340:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 425,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 407,
                            "src": "1432:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$660",
                              "typeString": "contract IExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IExchange_$660",
                              "typeString": "contract IExchange"
                            }
                          ],
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1424:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1424:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 421,
                        "name": "mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "1405:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MinterRole_$1315",
                          "typeString": "contract MinterRole"
                        }
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1273,
                      "src": "1405:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "1452:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MinterRole_$1315",
                          "typeString": "contract MinterRole"
                        }
                      },
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "renounceMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1282,
                      "src": "1452:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1452:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1495:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 399,
                  "id": 435,
                  "nodeType": "Return",
                  "src": "1488:11:3"
                }
              ]
            },
            "documentation": "@dev Deploys a new WrappedERC20 token and automated Exchange contract for a given ERC20 token.\n@param _token ERC20 token address e.g. PAY token",
            "id": 437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "1065:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2142",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 394,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2142,
                    "src": "1065:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2142",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1064:15:3"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "1096:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1096:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1095:6:3"
            },
            "scope": 552,
            "src": "1049:457:3",
            "stateMutability": "nonpayable",
            "superFunction": 682,
            "visibility": "public"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "1795:752:3",
              "statements": [
                {
                  "assignments": [
                    445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 445,
                      "name": "t",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "1887:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Detailed_$570",
                        "typeString": "contract IERC20Detailed"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 444,
                        "name": "IERC20Detailed",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 570,
                        "src": "1887:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Detailed_$570",
                          "typeString": "contract IERC20Detailed"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 451,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 448,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "1929:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1921:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1921:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 446,
                      "name": "IERC20Detailed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "1906:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20Detailed_$570_$",
                        "typeString": "type(contract IERC20Detailed)"
                      }
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1906:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Detailed_$570",
                      "typeString": "contract IERC20Detailed"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1887:50:3"
                },
                {
                  "assignments": [
                    453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 453,
                      "name": "wrappedName",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "1947:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1947:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 464,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "57726170706564",
                            "id": 457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1999:9:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_661048a69c5688887803a5c9d2aafc2eb848019e0dc0d65adab154e0ad9af134",
                              "typeString": "literal_string \"Wrapped\""
                            },
                            "value": "Wrapped"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "20",
                            "id": 458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2010:3:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                              "typeString": "literal_string \" \""
                            },
                            "value": " "
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 459,
                                "name": "t",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 445,
                                "src": "2015:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Detailed_$570",
                                  "typeString": "contract IERC20Detailed"
                                }
                              },
                              "id": 460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "name",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 559,
                              "src": "2015:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2015:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_661048a69c5688887803a5c9d2aafc2eb848019e0dc0d65adab154e0ad9af134",
                              "typeString": "literal_string \"Wrapped\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                              "typeString": "literal_string \" \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 455,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2414,
                            "src": "1982:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1982:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1982:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1975:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": "string"
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1947:78:3"
                },
                {
                  "assignments": [
                    466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 466,
                      "name": "wrappedSymbol",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "2035:27:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 465,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2035:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 476,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "57",
                            "id": 470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2089:3:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d2ec75cd002cc54c4cc6690500ee64d030751a1b19466a4ba8be1b42eb5a1031",
                              "typeString": "literal_string \"W\""
                            },
                            "value": "W"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 471,
                                "name": "t",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 445,
                                "src": "2094:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Detailed_$570",
                                  "typeString": "contract IERC20Detailed"
                                }
                              },
                              "id": 472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 564,
                              "src": "2094:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2094:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_d2ec75cd002cc54c4cc6690500ee64d030751a1b19466a4ba8be1b42eb5a1031",
                              "typeString": "literal_string \"W\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 468,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2414,
                            "src": "2072:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2072:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2072:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2065:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": "string"
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2065:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2035:71:3"
                },
                {
                  "assignments": [
                    478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 478,
                      "name": "wrappedDecimals",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "2129:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 477,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2129:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 484,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 480,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 445,
                            "src": "2159:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Detailed_$570",
                              "typeString": "contract IERC20Detailed"
                            }
                          },
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 569,
                          "src": "2159:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2159:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2153:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": "uint8"
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2153:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2129:43:3"
                },
                {
                  "assignments": [
                    486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 486,
                      "name": "wrappedToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "2242:35:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                        "typeString": "contract IERC20MintableBurnable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 485,
                        "name": "IERC20MintableBurnable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 594,
                        "src": "2242:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                          "typeString": "contract IERC20MintableBurnable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 493,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 489,
                        "name": "wrappedName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 453,
                        "src": "2308:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 490,
                        "name": "wrappedSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 466,
                        "src": "2331:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 491,
                        "name": "wrappedDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "2356:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2280:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_WrappedERC20_$89_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract WrappedERC20)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 487,
                        "name": "WrappedERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 89,
                        "src": "2284:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WrappedERC20_$89",
                          "typeString": "contract WrappedERC20"
                        }
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2280:101:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WrappedERC20_$89",
                      "typeString": "contract WrappedERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2242:139:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 494,
                        "name": "wrappedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "2391:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IERC20MintableBurnable_$594_$",
                          "typeString": "mapping(address => contract IERC20MintableBurnable)"
                        }
                      },
                      "id": 498,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 496,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "2413:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2405:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2405:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2391:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                        "typeString": "contract IERC20MintableBurnable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 499,
                      "name": "wrappedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 486,
                      "src": "2424:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                        "typeString": "contract IERC20MintableBurnable"
                      }
                    },
                    "src": "2391:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                      "typeString": "contract IERC20MintableBurnable"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "2391:45:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 504,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "2479:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2471:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2471:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 507,
                            "name": "wrappedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 486,
                            "src": "2496:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                              "typeString": "contract IERC20MintableBurnable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                              "typeString": "contract IERC20MintableBurnable"
                            }
                          ],
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2488:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2488:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 502,
                      "name": "WrappedTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        379
                      ],
                      "referencedDeclaration": 379,
                      "src": "2451:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2451:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 510,
                  "nodeType": "EmitStatement",
                  "src": "2446:64:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 511,
                    "name": "wrappedToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 486,
                    "src": "2528:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                      "typeString": "contract IERC20MintableBurnable"
                    }
                  },
                  "functionReturnParameters": 443,
                  "id": 512,
                  "nodeType": "Return",
                  "src": "2521:19:3"
                }
              ]
            },
            "documentation": "@dev Deploys a new WrappedERC20 token for a given ERC20 token.\n@param _token ERC20 token address e.g. PAY token\n@return IERC20MintableBurnable wrapped token address",
            "id": 514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWrappedToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "1738:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2142",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 438,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2142,
                    "src": "1738:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2142",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1737:15:3"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "1771:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                    "typeString": "contract IERC20MintableBurnable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 441,
                    "name": "IERC20MintableBurnable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 594,
                    "src": "1771:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                      "typeString": "contract IERC20MintableBurnable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1770:24:3"
            },
            "scope": 552,
            "src": "1710:837:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 550,
              "nodeType": "Block",
              "src": "2942:254:3",
              "statements": [
                {
                  "assignments": [
                    524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 524,
                      "name": "exchange",
                      "nodeType": "VariableDeclaration",
                      "scope": 550,
                      "src": "2952:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$660",
                        "typeString": "contract IExchange"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 523,
                        "name": "IExchange",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 660,
                        "src": "2952:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchange_$660",
                          "typeString": "contract IExchange"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 530,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 527,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "3009:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2142",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 528,
                        "name": "_wrappedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 518,
                        "src": "3027:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                          "typeString": "contract IERC20MintableBurnable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$2142",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                          "typeString": "contract IERC20MintableBurnable"
                        }
                      ],
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2973:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IERC20_$2142_$_t_contract$_IERC20MintableBurnable_$594_$returns$_t_contract$_WrappedERC20Exchange_$357_$",
                        "typeString": "function (contract IERC20,contract IERC20MintableBurnable) returns (contract WrappedERC20Exchange)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 525,
                        "name": "WrappedERC20Exchange",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 357,
                        "src": "2977:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WrappedERC20Exchange_$357",
                          "typeString": "contract WrappedERC20Exchange"
                        }
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2973:77:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WrappedERC20Exchange_$357",
                      "typeString": "contract WrappedERC20Exchange"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2952:98:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 531,
                        "name": "exchanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "3060:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IExchange_$660_$",
                          "typeString": "mapping(address => contract IExchange)"
                        }
                      },
                      "id": 535,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 533,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "3078:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3070:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3070:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3060:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$660",
                        "typeString": "contract IExchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 536,
                      "name": "exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "3089:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$660",
                        "typeString": "contract IExchange"
                      }
                    },
                    "src": "3060:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchange_$660",
                      "typeString": "contract IExchange"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "3060:37:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 541,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "3136:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3128:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3128:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 544,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "3153:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$660",
                              "typeString": "contract IExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IExchange_$660",
                              "typeString": "contract IExchange"
                            }
                          ],
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3145:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3145:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 539,
                      "name": "ExchangeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        385
                      ],
                      "referencedDeclaration": 385,
                      "src": "3112:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3112:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "EmitStatement",
                  "src": "3107:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 548,
                    "name": "exchange",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 524,
                    "src": "3181:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchange_$660",
                      "typeString": "contract IExchange"
                    }
                  },
                  "functionReturnParameters": 522,
                  "id": 549,
                  "nodeType": "Return",
                  "src": "3174:15:3"
                }
              ]
            },
            "documentation": "@dev Deploys an automated Exchange contract for a given pair of ERC20 and WrappedERC20 tokens.\n@param _token ERC20 token address e.g. PAY token\n@param _wrappedToken Wrapped ERC20 token address e.g. wPAY token\n@return IExchange exchange address",
            "id": 551,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "2860:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2142",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 515,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2142,
                    "src": "2860:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2142",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "name": "_wrappedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "2875:36:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                    "typeString": "contract IERC20MintableBurnable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 517,
                    "name": "IERC20MintableBurnable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 594,
                    "src": "2875:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                      "typeString": "contract IERC20MintableBurnable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2859:53:3"
            },
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 521,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "2931:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IExchange_$660",
                    "typeString": "contract IExchange"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 520,
                    "name": "IExchange",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 660,
                    "src": "2931:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchange_$660",
                      "typeString": "contract IExchange"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2930:11:3"
            },
            "scope": 552,
            "src": "2836:360:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 553,
        "src": "436:2762:3"
      }
    ],
    "src": "0:3198:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/yos/work/wrapped-ERC20/contracts/WrappedERC20Factory.sol",
    "exportedSymbols": {
      "WrappedERC20Factory": [
        552
      ]
    },
    "id": 553,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 359,
        "literals": [
          "solidity",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 360,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 2143,
        "src": "25:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 361,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 2362,
        "src": "82:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/roles/MinterRole.sol",
        "file": "@openzeppelin/contracts/access/roles/MinterRole.sol",
        "id": 362,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 1316,
        "src": "142:61:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yos/work/wrapped-ERC20/contracts/interfaces/IERC20Detailed.sol",
        "file": "./interfaces/IERC20Detailed.sol",
        "id": 363,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 571,
        "src": "204:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yos/work/wrapped-ERC20/contracts/interfaces/IERC20MintableBurnable.sol",
        "file": "./interfaces/IERC20MintableBurnable.sol",
        "id": 364,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 595,
        "src": "246:49:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yos/work/wrapped-ERC20/contracts/interfaces/IExchange.sol",
        "file": "./interfaces/IExchange.sol",
        "id": 365,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 661,
        "src": "296:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yos/work/wrapped-ERC20/contracts/interfaces/IFactory.sol",
        "file": "./interfaces/IFactory.sol",
        "id": 366,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 698,
        "src": "333:35:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yos/work/wrapped-ERC20/contracts/WrappedERC20Exchange.sol",
        "file": "./WrappedERC20Exchange.sol",
        "id": 367,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 358,
        "src": "369:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yos/work/wrapped-ERC20/contracts/WrappedERC20.sol",
        "file": "./WrappedERC20.sol",
        "id": 368,
        "nodeType": "ImportDirective",
        "scope": 553,
        "sourceUnit": 90,
        "src": "406:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 369,
              "name": "IFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 697,
              "src": "468:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFactory_$697",
                "typeString": "contract IFactory"
              }
            },
            "id": 370,
            "nodeType": "InheritanceSpecifier",
            "src": "468:8:3"
          }
        ],
        "contractDependencies": [
          89,
          357,
          697
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 552,
        "linearizedBaseContracts": [
          552,
          697
        ],
        "name": "WrappedERC20Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 373,
            "libraryName": {
              "contractScope": null,
              "id": 371,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2361,
              "src": "489:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$2361",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "483:27:3",
            "typeName": {
              "contractScope": null,
              "id": 372,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2142,
              "src": "503:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2142",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 379,
            "name": "WrappedTokenCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "indexed": false,
                  "name": "collateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "542:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 377,
                  "indexed": false,
                  "name": "wrappedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "562:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "541:42:3"
            },
            "src": "516:68:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 385,
            "name": "ExchangeCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "indexed": false,
                  "name": "collateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "611:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 383,
                  "indexed": false,
                  "name": "exchange",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "631:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "610:38:3"
            },
            "src": "589:60:3"
          },
          {
            "constant": false,
            "id": 389,
            "name": "wrappedTokens",
            "nodeType": "VariableDeclaration",
            "scope": 552,
            "src": "655:63:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IERC20MintableBurnable_$594_$",
              "typeString": "mapping(address => contract IERC20MintableBurnable)"
            },
            "typeName": {
              "id": 388,
              "keyType": {
                "id": 386,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "663:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "655:42:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IERC20MintableBurnable_$594_$",
                "typeString": "mapping(address => contract IERC20MintableBurnable)"
              },
              "valueType": {
                "contractScope": null,
                "id": 387,
                "name": "IERC20MintableBurnable",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 594,
                "src": "674:22:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                  "typeString": "contract IERC20MintableBurnable"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 393,
            "name": "exchanges",
            "nodeType": "VariableDeclaration",
            "scope": 552,
            "src": "777:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IExchange_$660_$",
              "typeString": "mapping(address => contract IExchange)"
            },
            "typeName": {
              "id": 392,
              "keyType": {
                "id": 390,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "785:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "777:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IExchange_$660_$",
                "typeString": "mapping(address => contract IExchange)"
              },
              "valueType": {
                "contractScope": null,
                "id": 391,
                "name": "IExchange",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 660,
                "src": "796:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IExchange_$660",
                  "typeString": "contract IExchange"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 436,
              "nodeType": "Block",
              "src": "1102:404:3",
              "statements": [
                {
                  "assignments": [
                    401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 401,
                      "name": "wrappedToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 436,
                      "src": "1112:35:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                        "typeString": "contract IERC20MintableBurnable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 400,
                        "name": "IERC20MintableBurnable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 594,
                        "src": "1112:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                          "typeString": "contract IERC20MintableBurnable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 405,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 403,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "1169:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2142",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$2142",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 402,
                      "name": "createWrappedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "1150:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2142_$returns$_t_contract$_IERC20MintableBurnable_$594_$",
                        "typeString": "function (contract IERC20) returns (contract IERC20MintableBurnable)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1150:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                      "typeString": "contract IERC20MintableBurnable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1112:64:3"
                },
                {
                  "assignments": [
                    407
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 407,
                      "name": "exchange",
                      "nodeType": "VariableDeclaration",
                      "scope": 436,
                      "src": "1186:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$660",
                        "typeString": "contract IExchange"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 406,
                        "name": "IExchange",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 660,
                        "src": "1186:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchange_$660",
                          "typeString": "contract IExchange"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 412,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "1222:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2142",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 410,
                        "name": "wrappedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "1230:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                          "typeString": "contract IERC20MintableBurnable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$2142",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                          "typeString": "contract IERC20MintableBurnable"
                        }
                      ],
                      "id": 408,
                      "name": "createExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 551,
                      "src": "1207:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2142_$_t_contract$_IERC20MintableBurnable_$594_$returns$_t_contract$_IExchange_$660_$",
                        "typeString": "function (contract IERC20,contract IERC20MintableBurnable) returns (contract IExchange)"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1207:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchange_$660",
                      "typeString": "contract IExchange"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1186:57:3"
                },
                {
                  "assignments": [
                    414
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 414,
                      "name": "mintable",
                      "nodeType": "VariableDeclaration",
                      "scope": 436,
                      "src": "1340:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MinterRole_$1315",
                        "typeString": "contract MinterRole"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 413,
                        "name": "MinterRole",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1315,
                        "src": "1340:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MinterRole_$1315",
                          "typeString": "contract MinterRole"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 420,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 417,
                            "name": "wrappedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "1381:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                              "typeString": "contract IERC20MintableBurnable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                              "typeString": "contract IERC20MintableBurnable"
                            }
                          ],
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1373:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1373:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 415,
                      "name": "MinterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1315,
                      "src": "1362:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MinterRole_$1315_$",
                        "typeString": "type(contract MinterRole)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MinterRole_$1315",
                      "typeString": "contract MinterRole"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1340:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 425,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 407,
                            "src": "1432:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$660",
                              "typeString": "contract IExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IExchange_$660",
                              "typeString": "contract IExchange"
                            }
                          ],
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1424:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1424:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 421,
                        "name": "mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "1405:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MinterRole_$1315",
                          "typeString": "contract MinterRole"
                        }
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1273,
                      "src": "1405:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "1452:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MinterRole_$1315",
                          "typeString": "contract MinterRole"
                        }
                      },
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "renounceMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1282,
                      "src": "1452:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1452:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1495:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 399,
                  "id": 435,
                  "nodeType": "Return",
                  "src": "1488:11:3"
                }
              ]
            },
            "documentation": "@dev Deploys a new WrappedERC20 token and automated Exchange contract for a given ERC20 token.\n@param _token ERC20 token address e.g. PAY token",
            "id": 437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "1065:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2142",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 394,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2142,
                    "src": "1065:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2142",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1064:15:3"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "1096:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1096:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1095:6:3"
            },
            "scope": 552,
            "src": "1049:457:3",
            "stateMutability": "nonpayable",
            "superFunction": 682,
            "visibility": "public"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "1795:752:3",
              "statements": [
                {
                  "assignments": [
                    445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 445,
                      "name": "t",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "1887:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Detailed_$570",
                        "typeString": "contract IERC20Detailed"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 444,
                        "name": "IERC20Detailed",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 570,
                        "src": "1887:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Detailed_$570",
                          "typeString": "contract IERC20Detailed"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 451,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 448,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "1929:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1921:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1921:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 446,
                      "name": "IERC20Detailed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "1906:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20Detailed_$570_$",
                        "typeString": "type(contract IERC20Detailed)"
                      }
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1906:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Detailed_$570",
                      "typeString": "contract IERC20Detailed"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1887:50:3"
                },
                {
                  "assignments": [
                    453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 453,
                      "name": "wrappedName",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "1947:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1947:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 464,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "57726170706564",
                            "id": 457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1999:9:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_661048a69c5688887803a5c9d2aafc2eb848019e0dc0d65adab154e0ad9af134",
                              "typeString": "literal_string \"Wrapped\""
                            },
                            "value": "Wrapped"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "20",
                            "id": 458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2010:3:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                              "typeString": "literal_string \" \""
                            },
                            "value": " "
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 459,
                                "name": "t",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 445,
                                "src": "2015:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Detailed_$570",
                                  "typeString": "contract IERC20Detailed"
                                }
                              },
                              "id": 460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "name",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 559,
                              "src": "2015:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2015:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_661048a69c5688887803a5c9d2aafc2eb848019e0dc0d65adab154e0ad9af134",
                              "typeString": "literal_string \"Wrapped\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                              "typeString": "literal_string \" \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 455,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2414,
                            "src": "1982:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1982:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1982:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1975:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": "string"
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1947:78:3"
                },
                {
                  "assignments": [
                    466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 466,
                      "name": "wrappedSymbol",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "2035:27:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 465,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2035:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 476,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "57",
                            "id": 470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2089:3:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d2ec75cd002cc54c4cc6690500ee64d030751a1b19466a4ba8be1b42eb5a1031",
                              "typeString": "literal_string \"W\""
                            },
                            "value": "W"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 471,
                                "name": "t",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 445,
                                "src": "2094:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Detailed_$570",
                                  "typeString": "contract IERC20Detailed"
                                }
                              },
                              "id": 472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 564,
                              "src": "2094:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2094:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_d2ec75cd002cc54c4cc6690500ee64d030751a1b19466a4ba8be1b42eb5a1031",
                              "typeString": "literal_string \"W\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 468,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2414,
                            "src": "2072:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2072:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2072:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2065:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": "string"
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2065:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2035:71:3"
                },
                {
                  "assignments": [
                    478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 478,
                      "name": "wrappedDecimals",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "2129:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 477,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2129:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 484,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 480,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 445,
                            "src": "2159:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Detailed_$570",
                              "typeString": "contract IERC20Detailed"
                            }
                          },
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 569,
                          "src": "2159:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2159:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2153:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": "uint8"
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2153:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2129:43:3"
                },
                {
                  "assignments": [
                    486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 486,
                      "name": "wrappedToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "2242:35:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                        "typeString": "contract IERC20MintableBurnable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 485,
                        "name": "IERC20MintableBurnable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 594,
                        "src": "2242:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                          "typeString": "contract IERC20MintableBurnable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 493,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 489,
                        "name": "wrappedName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 453,
                        "src": "2308:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 490,
                        "name": "wrappedSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 466,
                        "src": "2331:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 491,
                        "name": "wrappedDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "2356:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2280:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_WrappedERC20_$89_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract WrappedERC20)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 487,
                        "name": "WrappedERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 89,
                        "src": "2284:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WrappedERC20_$89",
                          "typeString": "contract WrappedERC20"
                        }
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2280:101:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WrappedERC20_$89",
                      "typeString": "contract WrappedERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2242:139:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 494,
                        "name": "wrappedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "2391:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IERC20MintableBurnable_$594_$",
                          "typeString": "mapping(address => contract IERC20MintableBurnable)"
                        }
                      },
                      "id": 498,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 496,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "2413:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2405:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2405:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2391:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                        "typeString": "contract IERC20MintableBurnable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 499,
                      "name": "wrappedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 486,
                      "src": "2424:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                        "typeString": "contract IERC20MintableBurnable"
                      }
                    },
                    "src": "2391:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                      "typeString": "contract IERC20MintableBurnable"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "2391:45:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 504,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "2479:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2471:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2471:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 507,
                            "name": "wrappedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 486,
                            "src": "2496:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                              "typeString": "contract IERC20MintableBurnable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                              "typeString": "contract IERC20MintableBurnable"
                            }
                          ],
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2488:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2488:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 502,
                      "name": "WrappedTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        379
                      ],
                      "referencedDeclaration": 379,
                      "src": "2451:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2451:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 510,
                  "nodeType": "EmitStatement",
                  "src": "2446:64:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 511,
                    "name": "wrappedToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 486,
                    "src": "2528:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                      "typeString": "contract IERC20MintableBurnable"
                    }
                  },
                  "functionReturnParameters": 443,
                  "id": 512,
                  "nodeType": "Return",
                  "src": "2521:19:3"
                }
              ]
            },
            "documentation": "@dev Deploys a new WrappedERC20 token for a given ERC20 token.\n@param _token ERC20 token address e.g. PAY token\n@return IERC20MintableBurnable wrapped token address",
            "id": 514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWrappedToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "1738:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2142",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 438,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2142,
                    "src": "1738:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2142",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1737:15:3"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "1771:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                    "typeString": "contract IERC20MintableBurnable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 441,
                    "name": "IERC20MintableBurnable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 594,
                    "src": "1771:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                      "typeString": "contract IERC20MintableBurnable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1770:24:3"
            },
            "scope": 552,
            "src": "1710:837:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 550,
              "nodeType": "Block",
              "src": "2942:254:3",
              "statements": [
                {
                  "assignments": [
                    524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 524,
                      "name": "exchange",
                      "nodeType": "VariableDeclaration",
                      "scope": 550,
                      "src": "2952:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$660",
                        "typeString": "contract IExchange"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 523,
                        "name": "IExchange",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 660,
                        "src": "2952:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchange_$660",
                          "typeString": "contract IExchange"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 530,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 527,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "3009:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2142",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 528,
                        "name": "_wrappedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 518,
                        "src": "3027:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                          "typeString": "contract IERC20MintableBurnable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$2142",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                          "typeString": "contract IERC20MintableBurnable"
                        }
                      ],
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2973:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IERC20_$2142_$_t_contract$_IERC20MintableBurnable_$594_$returns$_t_contract$_WrappedERC20Exchange_$357_$",
                        "typeString": "function (contract IERC20,contract IERC20MintableBurnable) returns (contract WrappedERC20Exchange)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 525,
                        "name": "WrappedERC20Exchange",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 357,
                        "src": "2977:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WrappedERC20Exchange_$357",
                          "typeString": "contract WrappedERC20Exchange"
                        }
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2973:77:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WrappedERC20Exchange_$357",
                      "typeString": "contract WrappedERC20Exchange"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2952:98:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 531,
                        "name": "exchanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "3060:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IExchange_$660_$",
                          "typeString": "mapping(address => contract IExchange)"
                        }
                      },
                      "id": 535,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 533,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "3078:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3070:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3070:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3060:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$660",
                        "typeString": "contract IExchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 536,
                      "name": "exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "3089:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$660",
                        "typeString": "contract IExchange"
                      }
                    },
                    "src": "3060:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchange_$660",
                      "typeString": "contract IExchange"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "3060:37:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 541,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "3136:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2142",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3128:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3128:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 544,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "3153:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$660",
                              "typeString": "contract IExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IExchange_$660",
                              "typeString": "contract IExchange"
                            }
                          ],
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3145:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3145:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 539,
                      "name": "ExchangeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        385
                      ],
                      "referencedDeclaration": 385,
                      "src": "3112:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3112:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "EmitStatement",
                  "src": "3107:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 548,
                    "name": "exchange",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 524,
                    "src": "3181:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchange_$660",
                      "typeString": "contract IExchange"
                    }
                  },
                  "functionReturnParameters": 522,
                  "id": 549,
                  "nodeType": "Return",
                  "src": "3174:15:3"
                }
              ]
            },
            "documentation": "@dev Deploys an automated Exchange contract for a given pair of ERC20 and WrappedERC20 tokens.\n@param _token ERC20 token address e.g. PAY token\n@param _wrappedToken Wrapped ERC20 token address e.g. wPAY token\n@return IExchange exchange address",
            "id": 551,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "2860:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2142",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 515,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2142,
                    "src": "2860:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2142",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "name": "_wrappedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "2875:36:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                    "typeString": "contract IERC20MintableBurnable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 517,
                    "name": "IERC20MintableBurnable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 594,
                    "src": "2875:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20MintableBurnable_$594",
                      "typeString": "contract IERC20MintableBurnable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2859:53:3"
            },
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 521,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "2931:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IExchange_$660",
                    "typeString": "contract IExchange"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 520,
                    "name": "IExchange",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 660,
                    "src": "2931:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchange_$660",
                      "typeString": "contract IExchange"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2930:11:3"
            },
            "scope": 552,
            "src": "2836:360:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 553,
        "src": "436:2762:3"
      }
    ],
    "src": "0:3198:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x47cdbd9ccb21e8c42b64c67901cd6369386d9c327365e6af6d4e479add31095e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "collateral",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "wrappedToken",
              "type": "address"
            }
          ],
          "name": "WrappedTokenCreated",
          "type": "event",
          "signature": "0x47cdbd9ccb21e8c42b64c67901cd6369386d9c327365e6af6d4e479add31095e"
        },
        "0x2c4532633e8c7bd3e122b4acb022f8b719c809c0722baa1996befc9a26ad6e6c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "collateral",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "exchange",
              "type": "address"
            }
          ],
          "name": "ExchangeCreated",
          "type": "event",
          "signature": "0x2c4532633e8c7bd3e122b4acb022f8b719c809c0722baa1996befc9a26ad6e6c"
        }
      },
      "links": {},
      "address": "0x3CEA4205ED7a3A7c25C8A5C6dbB374e872F51523",
      "transactionHash": "0x3ffbec5d01bf02efbd4954776152f9083758f4276878e50e2a8adebd86355d3e"
    },
    "4": {
      "events": {
        "0x47cdbd9ccb21e8c42b64c67901cd6369386d9c327365e6af6d4e479add31095e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "collateral",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "wrappedToken",
              "type": "address"
            }
          ],
          "name": "WrappedTokenCreated",
          "type": "event",
          "signature": "0x47cdbd9ccb21e8c42b64c67901cd6369386d9c327365e6af6d4e479add31095e"
        },
        "0x2c4532633e8c7bd3e122b4acb022f8b719c809c0722baa1996befc9a26ad6e6c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "collateral",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "exchange",
              "type": "address"
            }
          ],
          "name": "ExchangeCreated",
          "type": "event",
          "signature": "0x2c4532633e8c7bd3e122b4acb022f8b719c809c0722baa1996befc9a26ad6e6c"
        }
      },
      "links": {},
      "address": "0x1FFf610F99941cD1Ea2a5c32986a6eFE89B0d2Ca",
      "transactionHash": "0x822192b10bf24dcf57a9a629f0b4d217cab67356fa6115fd6d6441a284332198"
    },
    "5777": {
      "events": {
        "0x47cdbd9ccb21e8c42b64c67901cd6369386d9c327365e6af6d4e479add31095e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "collateral",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "wrappedToken",
              "type": "address"
            }
          ],
          "name": "WrappedTokenCreated",
          "type": "event",
          "signature": "0x47cdbd9ccb21e8c42b64c67901cd6369386d9c327365e6af6d4e479add31095e"
        },
        "0x2c4532633e8c7bd3e122b4acb022f8b719c809c0722baa1996befc9a26ad6e6c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "collateral",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "exchange",
              "type": "address"
            }
          ],
          "name": "ExchangeCreated",
          "type": "event",
          "signature": "0x2c4532633e8c7bd3e122b4acb022f8b719c809c0722baa1996befc9a26ad6e6c"
        }
      },
      "links": {},
      "address": "0xB8d50139dE6eb220ac80090ca0cBCE96e8dFd736",
      "transactionHash": "0x9c5d28df21bab70a8bf5e47ae47c4578b4b9ba0cb03ab7fea7339eccd0c175aa"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-10-28T17:45:48.403Z",
  "devdoc": {
    "methods": {
      "create(address)": {
        "details": "Deploys a new WrappedERC20 token and automated Exchange contract for a given ERC20 token.",
        "params": {
          "_token": "ERC20 token address e.g. PAY token"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}